import { AppError } from "app/helpers/app-error";
import * as z from "zod";

export const SchemaCreate = z.object({
  {{~ if (identifierField === "email") }}
  email: z.string().email("Invalid email format"),
  {{~ else }}
  {{ identifierField }}: z.string().min(3).max(40),
  {{~ endif }}
  password: z
    .string()
    .min(8, "Password must be at least 8 characters long")
    .max(20, "Password must be at most 20 characters long"),
});

export type SchemaType = z.infer<typeof SchemaCreate>;

export async function create(data: SchemaType) {
  try {
    SchemaCreate.parse(data);
  } catch (error) {
    if (error instanceof z.ZodError || error instanceof AppError) {
      throw error;
    }
  }
}
